// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TeamsHelper.Database;

namespace TeamsHelper.WebApp.Migrations
{
    [DbContext(typeof(HelperContext))]
    partial class HelperContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5");

            modelBuilder.Entity("TeamsHelper.Database.Authorization", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("AccessToken")
                        .HasColumnType("TEXT");

                    b.Property<string>("RenewToken")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Authorizations");
                });

            modelBuilder.Entity("TeamsHelper.Database.Day", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("OwnerId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Days");
                });

            modelBuilder.Entity("TeamsHelper.Database.Event", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("DayId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("GeneratedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("GoogleEventId")
                        .HasColumnType("TEXT");

                    b.Property<string>("TeamsEventId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DayId");

                    b.HasIndex("GoogleEventId");

                    b.HasIndex("TeamsEventId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("TeamsHelper.Database.GoogleCalendar", b =>
                {
                    b.Property<string>("CalendarId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("CalendarId");

                    b.ToTable("GoogleCalendars");
                });

            modelBuilder.Entity("TeamsHelper.Database.GoogleEvent", b =>
                {
                    b.Property<string>("EventId")
                        .HasColumnType("TEXT");

                    b.HasKey("EventId");

                    b.ToTable("GoogleEvents");
                });

            modelBuilder.Entity("TeamsHelper.Database.Meet", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("GeneratedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("GoogleEventId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ScheduledAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("TeamsEventId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GoogleEventId");

                    b.HasIndex("TeamsEventId");

                    b.ToTable("Meets");
                });

            modelBuilder.Entity("TeamsHelper.Database.TeamsEvent", b =>
                {
                    b.Property<string>("EventId")
                        .HasColumnType("TEXT");

                    b.HasKey("EventId");

                    b.ToTable("TeamsEvents");
                });

            modelBuilder.Entity("TeamsHelper.Database.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayName")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("GoogleAuthorizationId")
                        .HasColumnType("TEXT");

                    b.Property<string>("MicrosoftAuthorizationId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GoogleAuthorizationId");

                    b.HasIndex("MicrosoftAuthorizationId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TeamsHelper.Database.Day", b =>
                {
                    b.HasOne("TeamsHelper.Database.User", "Owner")
                        .WithMany("Days")
                        .HasForeignKey("OwnerId");
                });

            modelBuilder.Entity("TeamsHelper.Database.Event", b =>
                {
                    b.HasOne("TeamsHelper.Database.Day", "Day")
                        .WithMany("Events")
                        .HasForeignKey("DayId");

                    b.HasOne("TeamsHelper.Database.GoogleEvent", "GoogleEvent")
                        .WithMany()
                        .HasForeignKey("GoogleEventId");

                    b.HasOne("TeamsHelper.Database.TeamsEvent", "TeamsEvent")
                        .WithMany()
                        .HasForeignKey("TeamsEventId");
                });

            modelBuilder.Entity("TeamsHelper.Database.Meet", b =>
                {
                    b.HasOne("TeamsHelper.Database.GoogleEvent", "GoogleEvent")
                        .WithMany()
                        .HasForeignKey("GoogleEventId");

                    b.HasOne("TeamsHelper.Database.TeamsEvent", "TeamsEvent")
                        .WithMany()
                        .HasForeignKey("TeamsEventId");
                });

            modelBuilder.Entity("TeamsHelper.Database.User", b =>
                {
                    b.HasOne("TeamsHelper.Database.Authorization", "GoogleAuthorization")
                        .WithMany()
                        .HasForeignKey("GoogleAuthorizationId");

                    b.HasOne("TeamsHelper.Database.Authorization", "MicrosoftAuthorization")
                        .WithMany()
                        .HasForeignKey("MicrosoftAuthorizationId");
                });
#pragma warning restore 612, 618
        }
    }
}
